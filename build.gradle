buildscript {
  apply from: rootProject.file("gradle/dependencies.gradle")

  repositories {
    google()
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath "com.gradle:build-scan-plugin:2.3"
    classpath "com.android.tools.build:gradle:3.4.1"
    classpath "com.novoda:gradle-android-command-plugin:2.1.0"
    classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6"
    classpath "com.vanniktech:gradle-android-apk-size-plugin:0.4.0"
    classpath "com.github.triplet.gradle:play-publisher:1.2.0"
    classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.3"
    classpath "com.github.ben-manes:gradle-versions-plugin:0.21.0"
    classpath "org.codehaus.groovy:groovy-android-gradle-plugin:1.2.0"
  }
}

repositories {
  google()
  maven { url "https://plugins.gradle.org/m2/" }
}

apply from: rootProject.file("gradle/scan.gradle")
apply plugin: "com.android.application"
apply plugin: "groovyx.android"
apply plugin: "android-command"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "com.vanniktech.android.apk.size"
apply plugin: "com.github.ben-manes.versions"
apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/quality.gradle")
apply from: rootProject.file("gradle/publish.gradle")

android {
  compileSdkVersion rootProject.ext.compileSdkVersion

  defaultConfig {
    applicationId "burrows.apps.example.template"
    versionCode 1
    versionName "1.0"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  sourceSets {
    androidTest.java.srcDirs += "src/androidTest/groovy"
    main.java.srcDirs += "src/main/groovy"
    test.java.srcDirs += "src/test/groovy"
  }

  signingConfigs {
    debug {
      storeFile rootProject.file("./.buildscript/debug.keystore")
      storePassword "android"
      keyAlias "androiddebugkey"
      keyPassword "android"
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFile getDefaultProguardFile("proguard-android-optimize.txt")
      proguardFile "proguard-rules.pro"
      signingConfig signingConfigs.debug
    }
  }

  compileOptions {
    sourceCompatibility "1.8"
    targetCompatibility "1.8"
  }

  dexOptions.preDexLibraries !rootProject.ext.ci

  lintOptions {
    textOutput "stdout"
    checkAllWarnings true
    warningsAsErrors true
    disable "MissingRegistered"
    disable "UnusedResources" // Unused will be removed on release
    disable "IconExpectedSize" // Using the material icons provided from Google
    disable "GoogleAppIndexingApiWarning" // We might want to index our app later
    disable "InvalidPackage" // Butterknife, Okio and Realm
    disable "ResourceType" // Annotation binding
    disable "GradleDependency"
    disable "NewerVersionAvailable"
    disable "OldTargetApi"
  }

  testOptions.unitTests {
    all {
      jacoco {
        includeNoLocationClasses = true
      }
    }
  }
}

def supportLibraryVersion = "28.0.0"
def espressoVersion = "3.0.2"

dependencies {
  implementation "org.codehaus.groovy:groovy:2.4.9:grooid"
  implementation "com.android.support:appcompat-v7:$supportLibraryVersion"

  androidTestImplementation "com.android.support.test:runner:1.0.2"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
  androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
  androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion", { exclude group: "com.android.support" }

  testImplementation "org.robospock:robospock:1.0.1"
  testImplementation "org.robolectric:shadows-support-v4:3.3.1"
  testImplementation "org.khronos:opengl-api:gl1.1-android-2.1_r1"
}
